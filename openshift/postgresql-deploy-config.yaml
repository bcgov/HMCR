kind: Template
apiVersion: v1
metadata:
  name: ${PROJECT_NAME}
objects:
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: ${NAME}${SUFFIX}
    spec:
      replicas: 1
      selector:
        deploymentconfig: ${NAME}${SUFFIX}
      strategy:
        activeDeadlineSeconds: 21600
        resources: {}
        type: Recreate
        recreateParams:
          timeoutSeconds: 600
      template:
        metadata:
          name: ${NAME}${SUFFIX}
          labels:
            deploymentconfig: ${NAME}${SUFFIX}
        spec:
          containers:
            - image: docker-registry.default.svc:5000/txkggj-tools/${IMAGE_STREAM_TAG}
              imagePullPolicy: IfNotPresent
              name: ${NAME}${SUFFIX}
              env:
                - name: POSTGRESQL_USER
                  valueFrom:
                    secretKeyRef:
                      name:  ${NAME}${SUFFIX}
                      key: database-user
                - name: POSTGRESQL_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name:  ${NAME}${SUFFIX}
                      key: database-password
                - name: POSTGRESQL_ADMIN_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name:  ${NAME}${SUFFIX}
                      key: admin-password
                - name: POSTGRESQL_DATABASE
                  value: "${POSTGRESQL_DATABASE_NAME}"
              ports:
                - containerPort: 5432
                  protocol: TCP
              resources:
                requests:
                  cpu: 10m
                  memory: 128Mi
                limits:
                  cpu: 250m
                  memory: 512Mi
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - name: "${NAME}${SUFFIX}-data"
                  mountPath: "/var/lib/pgsql/data"
              livenessProbe:
                tcpSocket:
                  port: 5432
                initialDelaySeconds: 30
                timeoutSeconds: 1
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 3
              readinessProbe:
                exec:
                  command:
                    - "/bin/sh"
                    - "-i"
                    - "-c"
                    - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                      'SELECT 1'
                initialDelaySeconds: 5
                timeoutSeconds: 1
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 3
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
          volumes:
              - name: "${NAME}${SUFFIX}-data"
                persistentVolumeClaim:
                  claimName: ${NAME}${SUFFIX}
      test: false
      triggers:
        - type: ConfigChange
        - imageChangeParams:
            automatic: true
            containerNames:
              - ${NAME}${SUFFIX}
            from:
              kind: ImageStreamTag
              name: ${IMAGE_STREAM_TAG}
              namespace: txkggj-tools
          type: ImageChange
  - kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      name: ${NAME}${SUFFIX}
    selector:
        deploymentconfig: ${NAME}${SUFFIX}
    spec:
      storageClassName: "${PERSISTENT_VOLUME_CLASS}"
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: "${PERSISTENT_VOLUME_SIZE}"
  - kind: Secret
    apiVersion: v1
    metadata:
      name: ${NAME}${SUFFIX}
    selector:
        deploymentconfig: ${NAME}${SUFFIX}
    stringData:
      admin-password: "${POSTGRESQL_ADMIN_PASSWORD}"
      database-password: "${POSTGRESQL_PASSWORD}"
      database-user: "${POSTGRESQL_USER}"
      connection-string: "User ID=${POSTGRESQL_USER};Password=${POSTGRESQL_PASSWORD};Host=${NAME}${SUFFIX};Port=5432;Database=${POSTGRESQL_DATABASE_NAME}"
    type: Opaque
  - kind: Service
    apiVersion: v1
    metadata:
      name: ${NAME}${SUFFIX}
    spec:
      ports:
        - name: postgresql
          protocol: TCP
          port: 5432
          targetPort: 5432
      selector:
        deploymentconfig: ${NAME}${SUFFIX}
parameters:
  - description: Name of the project (HMCR)
    displayName: PROJECT_NAME
    name: PROJECT_NAME
    required: true
    value: "hmcr"
  - name: NAME
    displayName: Name
    description: The name assigned to all of the OpenShift resources associated to the PostgreSQL instance.
    required: true
    value: postgresql
  - description: A name suffix used for all objects
    displayName: Suffix
    name: SUFFIX
    required: false
    value: "-dev"
  - description: Environment short name (dev,test,uat,prod)
    displayName: ENV
    name: ENV
    required: false
    value: "dev"
  - description: A version used for the image tags
    displayName: version
    name: VERSION
    required: true
    value: "v1.0.0"
  - description: ImageStreamTag
    displayName: ImageStreamTag
    name: IMAGE_STREAM_TAG
    value: "postgresql-10-rhel8:1"
  - name: POSTGRESQL_DATABASE_NAME
    displayName: PostgreSQL Database Name
    description: The name of the PostgreSQL database.
    required: true
    value: serilog
  - name: PERSISTENT_VOLUME_SIZE
    displayName: Persistent Volume Size
    description: The size of the persistent volume , e.g. 512Mi, 1Gi, 2Gi.
    required: true
    value: 1Gi
  - name: PERSISTENT_VOLUME_CLASS
    displayName: Persistent Volume Class name
    description: The class of the volume; netapp-file-standard, netapp-file-block
    required: false
    value: netapp-file-standard
  - name: POSTGRESQL_USER
    displayName: PostgreSQL Connection Username
    description: Username for PostgreSQL user that will be used for accessing the database.
    required: true
    value: serilog
  - name: POSTGRESQL_PASSWORD
    displayName: PostgreSQL Connection Password
    description: Password for the PostgreSQL connection user.
    required: true
    generate: expression
    from: "[a-zA-Z0-9]{32}"
  - name: POSTGRESQL_ADMIN_PASSWORD
    displayName: PostgreSQL Admin Password
    description: Password for the 'postgres' PostgreSQL administrative account.
    required: true
    generate: expression
    from: "[a-zA-Z0-9]{32}"