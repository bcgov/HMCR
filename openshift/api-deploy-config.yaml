apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: ${PROJECT_NAME}
labels:
  template: api-deploy
objects:
  - apiVersion: v1
    kind: ImageStream
    metadata:
      creationTimestamp: null
      labels:
        shared: true
      name: ${NAME}
    spec:
      lookupPolicy:
        local: false
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      creationTimestamp: null
      name: ${NAME}${SUFFIX}
    spec:
      replicas: 1
      selector:
        deploymentconfig: ${NAME}${SUFFIX}
      strategy:
        resources:
          requests:
            cpu: 500m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
      template:
        metadata:
          creationTimestamp: null
          labels:
            deploymentconfig: ${NAME}${SUFFIX}
        spec:
          containers:
            - image: ${NAME}:${VERSION}
              name: api
              ports:
                - containerPort: 8080
                  protocol: TCP
              resources:
                requests:
                  cpu: 500m
                  memory: 256Mi
                limits:
                  cpu: 500m
                  memory: 512Mi
              env:
                - name: CONNECTION_STRING
                  valueFrom:
                    secretKeyRef:
                      name: api-connections-${ENV}
                      key: hmr.db
                - name: JWT_AUTHORITY
                  valueFrom:
                    secretKeyRef:
                      name: sso-configs
                      key: JWT_SSO_AUTHORITY
                - name: JWT_AUDIENCE
                  valueFrom:
                    secretKeyRef:
                      name: sso-configs
                      key: JWT_SSO_AUDIENCE
                - name: CHRIS_MAP_URL
                  valueFrom:
                    secretKeyRef:
                      name: chris-service
                      key: CHRIS_MAP_URL
                - name: CHRIS_OAS_URL
                  valueFrom:
                    secretKeyRef:
                      name: chris-service
                      key: CHRIS_OAS_URL
                - name: CHRIS_USER
                  valueFrom:
                    secretKeyRef:
                      name: chris-service
                      key: CHRIS_USER
                - name: CHRIS_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: chris-service
                      key: CHRIS_PASSWORD
                - name: BCEID_USER
                  valueFrom:
                    secretKeyRef:
                      name: bceid-service
                      key: BCEID_USER
                - name: BCEID_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: bceid-service
                      key: BCEID_PASSWORD
                - name: BCEID_URL
                  valueFrom:
                    secretKeyRef:
                      name: bceid-service
                      key: BCEID_URL
                - name: BCEID_OSID
                  valueFrom:
                    secretKeyRef:
                      name: bceid-service
                      key: BCEID_OSID
                - name: ASPNETCORE_ENVIRONMENT
                  value: ${ASPNETCORE_ENVIRONMENT}
      test: false
      triggers:
        - imageChangeParams:
            automatic: true
            containerNames:
              - api
            from:
              kind: ImageStreamTag
              name: ${NAME}:${VERSION}
          type: ImageChange
        - type: ConfigChange
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      name: ${NAME}${SUFFIX}
    spec:
      ports:
        - name: web
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        deploymentconfig: ${NAME}${SUFFIX}
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      creationTimestamp: null
      name: ${NAME}${SUFFIX}
    spec:
      host: ${HOST}
      path: "/api"
      port:
        targetPort: web
      tls:
        termination: edge
      to:
        kind: Service
        name: ${NAME}${SUFFIX}
        weight: 100
      wildcardPolicy: None
parameters:
  - description: Name of the project (HMCR)
    displayName: PROJECT_NAME
    name: PROJECT_NAME
    required: true
    value: "hmcr"
  - description: A name used for all objects
    displayName: Name
    name: NAME
    required: true
    value: "api"
  - description: A name suffix used for all objects
    displayName: Suffix
    name: SUFFIX
    required: false
    value: "-dev"
  - description: Environment short name (dev,test,uat,prod)
    displayName: ENV
    name: ENV
    required: false
    value: "dev"
  - description: A version used for the image tags
    displayName: version
    name: VERSION
    required: true
    value: "v1.0.0"
  - description: The ASP Net Core deployment environment setting
    displayName: AspNetCore Environment
    name: ASPNETCORE_ENVIRONMENT
    required: true
    value: "Development"
  - description: HOST
    displayName: HOST
    name: HOST
    required: true
    value: ""
  - description: SOURCE_REPOSITORY_URL
    displayName: SOURCE_REPOSITORY_URL
    name: SOURCE_REPOSITORY_URL
    required: false
    value: ""
  - description: SOURCE_REPOSITORY_REF
    displayName: SOURCE_REPOSITORY_REF
    name: SOURCE_REPOSITORY_REF
    required: false
    value: ""
